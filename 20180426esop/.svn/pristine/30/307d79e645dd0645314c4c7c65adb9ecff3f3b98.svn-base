package com.esop.productInfo.controller;

import com.esop.productInfo.dto.*;
import com.esop.productInfo.service.ProductService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Created by wangbl on 2017/5/18.
 */
@RestController
public class ProductController {
    @Autowired
    ProductService productService;
    //查询产品编码和名称
    @RequestMapping(value="/getProductDict")
    public List getProductDict(ProductDictDto param){
        return productService.getProductDict(param);
    }
    //查询全部产品编码和名称，包括可见和不可见部分
    @RequestMapping(value="/getProductDictAll")
    public List getProductDictAll(ProductDictDto param){
        return productService.getProductDictAll(param);
    }
    //新增产品编码和名称
    @RequestMapping(value="/insertProductDict")
    public int insertProductDict(ProductDictDto param){
        return productService.insertProductDict(param);
    }
    //更新产品名称
    @RequestMapping(value="/updateProductDict")
    public int updateProductDict(ProductDictDto param){
        return productService.updateProductDict(param);
    }
    //删除产品编码和名称
    @RequestMapping(value="/deleteProductDict")
    public int deleteProductDict(ProductDictDto param){
        return productService.deleteProductDict(param);
    }
    //通过产品编码查询对应的已流转完成的环节
    @RequestMapping(value="/getLinkIdsByProdId")
    public List getLinkIdsByProdId(StateInfoDto param){
        System.out.println("getLinkIdsByProdId参数="+param.getProd_id());
        return productService.getLinkIdsByProdId(param);
    }

    //投诉信息查询
    @RequestMapping(value="/selectProductComplaints")
    public List selectProductComplaints(ProductComplaintsDto param){
        return productService.selectProductComplaints(param);
    }
    //提醒信息查询
    @RequestMapping(value="/selectRemindInfo")
    public Map selectRemindInfo(ProductRemindInfoDto param){
        List list=productService.selectRemindInfo(param);
        Map map=new HashMap<>();
        map.put("data",list);
        return map;
    }
    //提醒信息处理
    @RequestMapping(value="/updateRemindInfoById")
    public Map updateRemindInfoById(ProductRemindInfoDto param){
        List list=productService.updateRemindInfoById(param);
        Map map=new HashMap<>();
        map.put("result","0");
        map.put("retCode","0000");
        map.put("retCode","0000");
        map.put("retMsg","调用成功");
        map.put("data",list);
        return map;
    }
    //通过产品编码查询当前流转到的环节
    @RequestMapping(value="/getLinkIdingByProdId")
    public String getLinkIdingByProdId(StateInfoDto param){
        return productService.getLinkIdingByProdId(param);
    }
    //新增修改产品需求情况
    @RequestMapping(value="/demandSituation")
    public InterfaceParameterDto demandSituation(InterfaceParameterDto param){
        if(param.getBatch_id().equals("")) {
            StateInfoDto stateInfoDto = new StateInfoDto();
            stateInfoDto.setProd_id(param.getProd_id());
            param.setBatch_id(productService.getMaxBatchId(stateInfoDto));
            //param.setLink_id("1");
            //param.setReview_file_id(productService.getUploadFileInfoRelatedID());
            productService.insertDemandSituationNewStateInfo(param);
        }else {
            if (param.getCreate_date().equals("")) {
                productService.insertDemandSituation(param);
            } else {
                //如果附件信息字段和备注字段不为空，则通过另一条语句进行表信息更新，防止字段数据被覆盖
                if((!param.getAnnex().equals(""))||(!param.getNote().equals(""))){
                    productService.updateProgramReviewInfoAnnexAndnote(param);
                }else {
                    productService.updateDemandSituation(param);
                }
            }
        }
        return param;
    }
    //通过产品编码、批次、环节编码查询产品环节信息
    @RequestMapping(value="/selectProgramReviewInfo")
    public InterfaceParameterDto selectProgramReviewInfo(InterfaceParameterDto param){
        InterfaceParameterDto interfaceParameterDto = productService.selectProgramReviewInfo(param);
        return interfaceParameterDto;
    }
    //获取附件关联id
    @RequestMapping(value="/getUploadFileInfoRelatedID")
    public String getUploadFileInfoRelatedID() {
        return productService.getUploadFileInfoRelatedID();
    }
}
