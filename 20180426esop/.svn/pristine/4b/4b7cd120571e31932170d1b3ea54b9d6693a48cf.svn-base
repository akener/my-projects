package com.esop.basicManagement.controller;

import com.esop.basicManagement.dto.PwdResetDto;
import com.esop.basicManagement.service.PwdResetService;
import com.esop.common.security.DESPlus;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.text.SimpleDateFormat;
import java.util.*;

/**
 * Created by Qiao on 2017/7/2.
 */
@RestController
public class PwdResetController {
    @Autowired
    PwdResetService pwdResetService;

    @RequestMapping(value = "/checkPassword")
    public int checkPassword(PwdResetDto parameter){
        int res=1;
        PwdResetDto dto = new PwdResetDto();
        dto =  pwdResetService.checkPassword(parameter);
        try {
            DESPlus des = new DESPlus();
            String pwd = des.encrypt(parameter.getPassword());
            //System.out.println("pwd--------"+pwd);
            if(!dto.getPassword().equals(pwd)){
                res = -1;//密码不匹配
            }else{
                res = 1;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return res;
    }

    @RequestMapping(value = "/updatePwd")
    public int updatePwd(PwdResetDto parameter){
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        int res = 1;
        DESPlus des = null;
        try {
            PwdResetDto dto = pwdResetService.getPhoneNo(parameter);
            String phone_no = dto.getContract_phone();
            String s_msgCnt = "";
            String param = "";
            String send_time = getTimeByMinute(1);
            Map insertMap = new HashMap();
            if(!"".equals(phone_no)){
                s_msgCnt = "您的ESOP工号["+parameter.getLogin_no()+"]于"+format.format(new Date())+"被["+parameter.getWorkNo()+"]重置，请尽快登录ESOP系统进行密码修改。";
                param = "{\"sms_release\":\"\",\"tmpMsg\":\""+s_msgCnt+"\"}";
                insertMap.put("PHONE_NO",phone_no);
                insertMap.put("PARAM",param);
                insertMap.put("SEND_TIME",send_time);
                insertMap.put("LOGIN_NO",parameter.getLogin_no());
                insertMap.put("OP_CODE","4178");
                pwdResetService.updatePwd(parameter,insertMap);
            }else{
                pwdResetService.updatePwd(parameter);
                res=1;
            }
        } catch (Exception e) {
            e.printStackTrace();
            res=-1;
        }
        return res;
    }

    @RequestMapping(value = "/getBossOrgCode")
    public String getBossOrgCode(PwdResetDto parameter){
        String boss_org_code = pwdResetService.getBossOrgCode(parameter);

        System.out.println("boss_org_code-----------"+boss_org_code);
        return "{\"boss_org_code\":\""+boss_org_code+"\"}";
        //return pwdResetService.getBossOrgCode(parameter);
    }

    @RequestMapping(value = "/getLogin")
    public List<PwdResetDto> getLogin(PwdResetDto parameter){
        return pwdResetService.getLogin(parameter);
    }

    @RequestMapping(value = "/getServiceName")
    public String getServiceName(PwdResetDto parameter){
        String service_name = pwdResetService.getServiceName(parameter);
        return "{\"service_name\":\""+service_name+"\"}";
    }

    //获取当前时间的前后几分钟
    public static String getTimeByMinute(int minute) {

        Calendar calendar = Calendar.getInstance();

        calendar.add(Calendar.MINUTE, minute);

        return new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(calendar.getTime());

    }
}
