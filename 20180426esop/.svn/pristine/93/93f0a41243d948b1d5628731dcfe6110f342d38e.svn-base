package com.esop.cqDevelopment.elecPack.controller;

import org.apache.commons.logging.LogFactory;
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;

import java.io.IOException;
import java.util.Iterator;
import java.util.Map;

public class PostJsonUtil {


    PostJsonUtil postJsonUtil;
    private  final org.apache.commons.logging.Log log = LogFactory.getLog(PostJsonUtil.class);

    /*public  String post(String url, String json,Map<String,String> headers) {
        log.info("enter post method");
        CloseableHttpClient httpclient = HttpClients.createDefault();
        String body = null;
        log.info("create httppost:" + url);
        log.info("post json" + json);
        HttpPost post = postJson(url, json,headers);
        body = invoke(httpclient, post);
        return body;
    }


    private  HttpPost postJson(String url, String json,Map<String,String> headers){
        log.info("enter postJson method");
        HttpPost httpost = new HttpPost(url);
        if(headers != null && headers.size() > 0)
        {
            for(Iterator<String> i = headers.keySet().iterator(); i.hasNext();)
            {
                String key = i.next();
                httpost.setHeader(key, headers.get(key));
            }
        }
        log.info("httpost=" + httpost);
        StringEntity entity = new StringEntity(json,"utf-8");//解决中文乱码问题
        entity.setContentEncoding("UTF-8");
        entity.setContentType("application/json");
        httpost.setEntity(entity);
        log.info("last-->httpost" + httpost);
        return httpost;
    }
    private  String invoke(CloseableHttpClient httpclient,
                           HttpUriRequest httpost) {
        log.info("enter invoke method");
        CloseableHttpResponse response = sendRequest(httpclient, httpost);
        log.info("invoke response20170916" + response);
        String body = paseResponse(response);
        log.info("invoke body20170916" + body);
        return body;
    }
    private  CloseableHttpResponse sendRequest(CloseableHttpClient httpclient,
                                               HttpUriRequest httpost) {
        log.info("execute post...");
        CloseableHttpResponse response = null;

        try {
            response = httpclient.execute(httpost);
        } catch (ClientProtocolException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return response;
    }
    private  String paseResponse(CloseableHttpResponse response){
        log.info("enter paseResponse");
        HttpEntity entity = response.getEntity();
        log.info("20170916entity=" + entity);
        int status = response.getStatusLine().getStatusCode();
        log.info("20170915status=" + status);
        if(status != 200)
        {
            throw new RuntimeException("REQUEST FAIL CODE"+status);
        }
        String body = null;
        try {
            body = EntityUtils.toString(entity,"utf8");
            EntityUtils.consume(entity);
            response.close();
        } catch (ParseException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
        return body;
    }*/
    //调用接口请求
    public  String post(String url, String json,Map<String,String> headers){
        HttpPost httpost = new HttpPost(url);
        if(headers != null && headers.size() > 0)
        {
            for(Iterator<String> i = headers.keySet().iterator();i.hasNext();){
                String key = i.next();
                httpost.setHeader(key, headers.get(key));
            }
        }
        StringEntity entity = new StringEntity(json,"gbk");//解决中文乱码问题
        entity.setContentEncoding("gbk");
        entity.setContentType("application/json;charset=gbk");
        httpost.setEntity(entity);
        HttpEntity httpEntitySend = httpost.getEntity();
        log.info("\n\n1-->httpost" + httpEntitySend + "\n\n");
        log.info("1-->httpost" + httpost);

        //发送HttpPost请求，获取返回值
        CloseableHttpClient httpclient = HttpClients.createDefault();
        CloseableHttpResponse response = null;
        HttpEntity httpEntity = null;
        String result = null;
        try {
            response = httpclient.execute(httpost);
            int status = response.getStatusLine().getStatusCode();

            if(status == 200){
                httpEntity = response.getEntity();
                log.info("2-->" + httpEntity);
                result = EntityUtils.toString(httpEntity,"gbk");

            }else {
                throw new RuntimeException("REQUEST FAIL CODE"+status);
            }
            //释放连接
            EntityUtils.consume(httpEntity);
            response.close();

        } catch (IOException e1) {
            e1.printStackTrace();
        }
        log.info("请求url："+url);
        log.info("请求参数："+json);
        log.info("返回参数："+result);
        return result;
    }

}
