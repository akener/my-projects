package com.esop.busiAnalysis.controller;

import com.esop.busiAnalysis.dto.CompeteInfoForAppDto;
import com.esop.busiAnalysis.dto.epCompeteInfoDto;
import com.esop.busiAnalysis.service.epCompeteInfoService;
import com.esop.common.page.DataConversion;
import com.esop.common.page.PageParameter;
import com.esop.common.page.Result;
import com.esop.common.uploadFile.UploadFileInfoDto;
import com.esop.common.uploadFile.UploadFileInfoService;
import com.esop.common.util.ParameterConversion;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.http.HttpServletRequest;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Created by Shinelon on 2017/6/6.
 */
@RestController
public class epCompeteInfoController {
    @Autowired
    epCompeteInfoService epCompeteInfoService;
    @Autowired
    UploadFileInfoService uploadFileInfoService;
    @Autowired
    DataConversion dataConversion;
    Result result=new Result();
    @RequestMapping(value="/epCompeteInfo")
    public Result getEpGroupDepList(epCompeteInfoDto parameter, HttpServletRequest request){
        System.out.println("--------------------打印--------------------------");
        Enumeration en =request.getParameterNames();
        while (en.hasMoreElements()){
            String paramName = (String) en.nextElement();
            System.out.println(paramName + " = " + request.getParameter(paramName));
        }
        System.out.println("--------------------打印--------------------------");
        String option = request.getParameter("action")==null?"":request.getParameter("action");
        //展示查询出来的
        int resultnum=0;//记录增加\修改\删除操作结果
        if (option.equals("create")){
            dataConversion.objectMapping(request, parameter);
            resultnum=epCompeteInfoService.insert(parameter);
            result.setRecordsTotal(result.getRecordsTotal()+resultnum);
        }else{
            PageParameter page = dataConversion.setPageValues(request);
            page.setRecordsTotal(result.getRecordsTotal());
            parameter.setPage(page);
            result = epCompeteInfoService.getEpCompeteInfo(parameter);
        }
        return result;
    }
    @RequestMapping(value="/qryCompeteInfo")
    public Result qryCompeteInfoList(epCompeteInfoDto parameter,HttpServletRequest request){
        System.out.println("--------------------打印--------------------------");
        Enumeration en =request.getParameterNames();
        while (en.hasMoreElements()){
            String paramName = (String) en.nextElement();
            System.out.println(paramName + " = " + request.getParameter(paramName));
        }
        System.out.println("--------------------打印--------------------------");
        PageParameter page = dataConversion.setPageValues(request);
        page.setRecordsTotal(result.getRecordsTotal());
        parameter.setPage(page);
        result = epCompeteInfoService.getEpCompeteInfo(parameter);
        return result;
    }
    @RequestMapping(value="/insCompeteInfo")
    public int insCompeteInfo(epCompeteInfoDto param,HttpServletRequest request){
        String service_no = request.getParameter("service_no");
        String town_name = request.getParameter("town_name");
        String town_no = "";
        String compete_person = request.getParameter("compete_person");
        String compete_policy = request.getParameter("compete_policy");
        String import_degree = request.getParameter("import_degree");
        String group_name = request.getParameter("group_name");
        String exp_data = request.getParameter("exp_data");
      //  String compete_id = epCompeteInfoService.getCompeteId().get(0).getCompete_id();

        param.setCompete_person(compete_person);
        param.setCompete_policy(compete_policy);
        param.setExp_data(exp_data);
        param.setGroup_name(group_name);
        param.setImport_degree(import_degree);
        param.setService_no(service_no);
        param.setTown_name(town_name);
      //  param.setCompete_id(compete_id);
        return epCompeteInfoService.insert(param);
    }
    @RequestMapping(value="/qryCompeteInfoById")
    public List<epCompeteInfoDto> qryCompeteInfoById(epCompeteInfoDto param){
        return epCompeteInfoService.qryCompeteInfoById(param);
    }
    @RequestMapping(value="/getUnitIdInfo")
    public Result getUnitIdInfo(epCompeteInfoDto parameter,HttpServletRequest request){
        System.out.println("--------------------打印--------------------------");
        Enumeration en =request.getParameterNames();
        while (en.hasMoreElements()){
            String paramName = (String) en.nextElement();
            System.out.println(paramName + " = " + request.getParameter(paramName));
        }
        System.out.println("--------------------打印--------------------------");
        PageParameter page = dataConversion.setPageValues(request);
        page.setRecordsTotal(result.getRecordsTotal());
        parameter.setPage(page);
        result = epCompeteInfoService.getUnitIdInfo(parameter);
        return result;
    }
    @RequestMapping(value="/getServiceNoGroupInfo")
    public Map getServiceNoGroupInfo(epCompeteInfoDto parameter){
        List list = epCompeteInfoService.getServiceNoGroupInfo(parameter);
        Map<String,String> groupMap = new HashMap<String,String>();
        if(list != null && list.size()>0){
            groupMap = (Map<String,String>)list.get(0);
        }
        return groupMap;
    }
    /*app端通过id查询竞争情报详细信息*/
    @RequestMapping(value="/getCompeteInfoById")
    public CompeteInfoForAppDto getCompeteInfoById(HttpServletRequest request){
        CompeteInfoForAppDto competeInfoDto = new CompeteInfoForAppDto();
        epCompeteInfoDto param = ParameterConversion.jsonToObject(request, epCompeteInfoDto.class);
        /*epCompeteInfoDto param = new epCompeteInfoDto();
        param.setCompete_id("16");
        param.setRelated_id("477");*/
        List list = epCompeteInfoService.getCompeteInfoById(param);
        if(list != null && list.size()>0){
            epCompeteInfoDto epDto = (epCompeteInfoDto) list.get(0);
            competeInfoDto.setReturn_kmsg("000000");
            competeInfoDto.setCompete_id(epDto.getCompete_id());
            competeInfoDto.setService_no(epDto.getService_no());
            competeInfoDto.setCompete_person(epDto.getCompete_person());
            competeInfoDto.setCompete_policy(epDto.getCompete_policy());
            competeInfoDto.setExp_data(epDto.getExp_data());
            competeInfoDto.setGroup_name(epDto.getGroup_name());
            competeInfoDto.setGroup_id(epDto.getGroup_id());
            competeInfoDto.setImport_degree(epDto.getImport_degree());
            competeInfoDto.setRelated_id(epDto.getRelated_id());
            competeInfoDto.setTown_id(epDto.getTown_id());
            competeInfoDto.setTown_name(epDto.getTown_name());
            UploadFileInfoDto parameter = new UploadFileInfoDto();
            parameter.setRelated_id(param.getRelated_id());
            List relateList = uploadFileInfoService.select(parameter);
            competeInfoDto.setList(relateList);
        }else{
            competeInfoDto.setReturn_kmsg("查询失败");
        }
        return competeInfoDto;
    }


}
