package com.esop.busiAnalysis.controller;

import com.esop.busiAnalysis.dto.EpBusiSolutionDto;
import com.esop.busiAnalysis.dto.EpProductHallDto;
import com.esop.busiAnalysis.service.EpProductHallService;
import com.esop.busiAnalysis.service.epCompeteInfoService;
import com.esop.common.page.DataConversion;
import com.esop.common.page.PageParameter;
import com.esop.common.page.Result;
import com.esop.common.uploadFile.UploadFileInfoDto;
import com.esop.common.uploadFile.UploadFileInfoService;
import com.esop.common.util.ParameterConversion;
import org.aspectj.weaver.patterns.HasThisTypePatternTriedToSneakInSomeGenericOrParameterizedTypePatternMatchingStuffAnywhereVisitor;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.http.HttpServletRequest;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Created by Administrator on 2017/7/7.
 */
@RestController
public class EpProductHallController {
    @Autowired
    EpProductHallService epProductHallService;
    @Autowired
    UploadFileInfoService uploadFileInfoService;
    @Autowired
    DataConversion dataConversion;
    Result result=new Result();
    @RequestMapping(value="/getProductHallInfo")
    public Result getProductHallInfo(EpProductHallDto parameter, HttpServletRequest request){
        System.out.println("--------------------打印--------------------------");
        Enumeration en =request.getParameterNames();
        while (en.hasMoreElements()){
            String paramName = (String) en.nextElement();
            System.out.println(paramName + " = " + request.getParameter(paramName));
        }
        System.out.println("--------------------打印--------------------------");
        PageParameter page = dataConversion.setPageValues(request);
        page.setRecordsTotal(result.getRecordsTotal());
        parameter.setPage(page);
        result = epProductHallService.getProductInfo(parameter);
        return result;
    }
    @RequestMapping(value="/insProductHallInfo")
    public int insProductInfo(EpProductHallDto param){
        return epProductHallService.insProductInfo(param);
    }
    @RequestMapping(value="/delProductHallInfo")
    public int delProductInfo(EpProductHallDto param){
        return epProductHallService.delete(param);
    }
    @RequestMapping(value="/updProductHallInfo")
    public int updProductInfo(EpProductHallDto param){
        return epProductHallService.updProductInfo(param);
    }
    @RequestMapping(value="/getProductInfoById")
    public List<EpProductHallDto> getProductInfoById(EpProductHallDto param){
        return epProductHallService.getProductInfoById(param);
    }
    @RequestMapping(value="/qryProductHallInfo")
    public Map qryProductHallInfo(HttpServletRequest request){
        EpProductHallDto param =  ParameterConversion.jsonToObject(request, EpProductHallDto.class);
        /*EpProductHallDto param = new EpProductHallDto();
        param.setRelated_id("477");
        param.setProduct_id("11111");*/
        List list = epProductHallService.qryProductHallInfo(param);
        Map<String,Object> retMap = new HashMap<String, Object>();
        Map<String,Object> rootMap = new HashMap<String,Object>();
        Map<String,Object> bodyMap = new HashMap<String,Object>();
        if(list != null && list.size()>0) {
            bodyMap.put("productHallList", list);
            bodyMap.put("return_kmsg","000000");
            if(param.getRelated_id() != ""){
                UploadFileInfoDto parameter = new UploadFileInfoDto();
                parameter.setRelated_id(param.getRelated_id());
                List relateList = uploadFileInfoService.select(parameter);
                bodyMap.put("related_list", relateList);
            }

            rootMap.put("BODY", bodyMap);
            retMap.put("ROOT", rootMap);
        }else{
            bodyMap.put("return_kmsg","查询失败");
            rootMap.put("BODY", bodyMap);
            retMap.put("ROOT", rootMap);
        }
        return retMap;
    }

}
