package com.esop.cqDevelopment.groupSuperMemberPayCost.controller;

import com.alibaba.fastjson.JSONObject;
import com.esop.common.page.DataConversion;
import com.esop.common.page.PageParameter;
import com.esop.common.page.Result;
import com.esop.cqDevelopment.groupMemberPayCost.controller.GroupMemberPayCostontroller;
import com.esop.cqDevelopment.groupMemberPayCost.service.GroupMemberPayCostService;
import com.esop.cqDevelopment.groupSuperMemberPayCost.dto.GroupSuperMemberDto;
import com.esop.cqDevelopment.groupSuperMemberPayCost.service.GroupSuperMemPayCostService;
import com.esop.cqDevelopment.refund.dto.CapCapitalInfoDto;
import org.apache.log4j.Logger;
import org.codehaus.groovy.runtime.typehandling.BigDecimalMath;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.http.HttpServletRequest;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.math.BigDecimal;
import java.util.*;

/**
 * Created by admin on 2017/10/19.
 */
@RestController
public class GroupSuperMemPayCostontroller {
    private static Logger logger = Logger.getLogger(GroupSuperMemPayCostontroller.class);
    @Autowired
    GroupSuperMemPayCostService groupSuperMemPayCostService;
    @Autowired
    GroupMemberPayCostService groupMemberPayCostService;//集团成员使用资金账户
    @Autowired
    DataConversion dataConversion;

    Result result=new Result();

    //提交申请
    @RequestMapping(value = "/saveGroupSuperMemApplyInfo",produces = {"application/xml", "application/json"})
    public String saveGroupSuperMemApplyInfo(GroupSuperMemberDto param,HttpServletRequest request){
        List list = new ArrayList();
        //校验（后面更改为js校验）
        StringBuffer info = new StringBuffer();
        if (param.getOrderID().equals("")){
            info.append("请输入ESOP工单号码！");
        }
        //如果提示信息长度大于0，则返回提示信息
        Map<String,Object> map = new HashMap<String,Object>();
        if(info.length()>0){
            String str = info.toString();
            map.put("info",str);
            String json = JSONObject.toJSONString(map);
            return json;
        }
        //申请总金额
        Double applyFileSumMoney = dealTxtFileAndAcquireSumMoney();
        logger.info("applyFileSumMoney" +  applyFileSumMoney);
        //资金账户可用余额
        CapCapitalInfoDto params = new CapCapitalInfoDto();
        String groupID = request.getParameter("groupID");
        params.setGrpCustId(groupID);
        List<CapCapitalInfoDto> capticalList = groupMemberPayCostService.getCapitalInfo(params);
        logger.info("【资金账户可用余额】" + capticalList);
        Double dMoney=0.0;
        for(CapCapitalInfoDto str: capticalList){
            String capticalMoney = str.getNowBalance();
            dMoney =  Double.parseDouble(capticalMoney);
        }
        String success="";
        String failed="";
        param.setOrderStatus("1");//设置申请单状态为待办
        //判断申请总金额与可用余额大小
        if(applyFileSumMoney<=dMoney){//如果总计金额小于等于资金账户可用余额，则可以使用，否则不允许提交申请。
            groupSuperMemPayCostService.insertGroupSuperMemApplyInfo(param);
            success ="操作成功";
        }else {
             failed = "提交申请失败！";
        }
        map.put("error",failed);
        map.put("info",success);
        String json = JSONObject.toJSONString(map);
        return json;
    }

    //集团超大成员资金申请业务操作列表工单
    @RequestMapping(value="/getGroupSuperMemOperateListInfo")
    public Result getGSMOListInfo(GroupSuperMemberDto parameter, HttpServletRequest request){
        Enumeration en =request.getParameterNames();
        while (en.hasMoreElements()){
            String paramName = (String) en.nextElement();
            System.out.println(paramName + " = " + request.getParameter(paramName));
        }
        PageParameter page = dataConversion.setPageValues(request);
        page.setRecordsTotal(result.getRecordsTotal());
        parameter.setPage(page);
        result = groupSuperMemPayCostService.getGSMOListInfo(parameter);
        String status = null;
        for(int i=0;i<result.getData().size();i++){
            GroupSuperMemberDto groupMemberDto = (GroupSuperMemberDto)result.getData().get(i);
            status = groupMemberDto.getOrderStatus();
            if( status.equals("1")){//已受理/待办/关闭
                groupMemberDto.setOrderStatus("待办");
            }
            //TODO
        }
        return result;
    }
    //超大集团成员待审批页面详情信息
    @RequestMapping(value = "/getGroupSuperMemApproveInfo")
    public GroupSuperMemberDto getGroupSuperMemInfoByOrderId(GroupSuperMemberDto groupSuperMemberDto , HttpServletRequest request){
        String orderID = request.getParameter("orderID");
        if(orderID!=null&&orderID!=""){
            groupSuperMemberDto.setOrderID(orderID);
        }
        GroupSuperMemberDto gsm=groupSuperMemPayCostService.getGroupSuperMemApproveInfo(groupSuperMemberDto);
        return  gsm;
    }
    //获取附件关联id
    @RequestMapping(value="/getUploadFileRelatedID")
    public String getUploadFileRelatedID() {
        return groupSuperMemPayCostService.getUploadFileRelatedID();
    }

    //解析附件Txt文件并计算申请总金额
    @RequestMapping(value="/getFileApplySumMoney")
    public Double dealTxtFileAndAcquireSumMoney() {
        File file = new File("D:/uploadFiles/file/test.txt");
        List<String> list = txt2String(file);
        String money = "";
        Double sumMoney = 0.0;
        BigDecimal totalMoney = BigDecimal.ZERO;
        for (String str :list ) {
            if (str.trim() != null && str.trim() != "" && str.trim().length() > 0) {
                String strArray[] = str.split("\\|");
               logger.info("【电话号码】" + strArray[0] + "【金额】" + strArray[1]);
                money = strArray[1];
                BigDecimal  bigDecimal = new BigDecimal(money);
                totalMoney = totalMoney.add(bigDecimal);
                sumMoney = totalMoney.doubleValue();
                //sumMoney = (Double)BigDecimalMath.add(sumMoney,dmoney);
            }
        }
        logger.info("【申请总金额=】" + sumMoney);
        return sumMoney;
    }
    public static List<String> txt2String(File file){
        StringBuilder result = new StringBuilder();
        List<String> strList = new ArrayList<String>();
        try{
            BufferedReader br = new BufferedReader(new InputStreamReader(new FileInputStream(file),"gbk"));//构造一个BufferedReader类来读取文件
            String s = null;
            while((s = br.readLine())!=null){//使用readLine方法，一次读一行
                result.append(System.lineSeparator()+s);
                strList.add(s);
            }
            br.close();
        }catch(Exception e){
            e.printStackTrace();
        }
        return strList;
    }


}
