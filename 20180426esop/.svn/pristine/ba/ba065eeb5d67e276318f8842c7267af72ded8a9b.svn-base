package test;



import com.esop.callServiceOtherSys.dto.CallServiceCrmDto;
import com.esop.common.jaxb.CallCrmService;
import org.apache.axis.client.Call;
import org.apache.axis.client.Service;
import org.dom4j.Document;
import org.dom4j.DocumentHelper;
import org.dom4j.Element;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.http.HttpServletRequest;
import javax.xml.namespace.QName;

@RestController
public class CallCrmServiceTestRC {
    @Autowired
    CallCrmService callCrmService;
    //crm增加工号权限
    @RequestMapping(value="/callCrmService_UserFuncAddTest")
    public static void main(String[] args1){
        CallCrmServiceTestRC callCrmService = new CallCrmServiceTestRC();
        try {
            String xmlParamter= "<?xml version=\"1.0\" encoding=\"UTF-8\" ?><root>";
            xmlParamter+="<ippowercode>01</ippowercode>";
            xmlParamter+="<iploginno>aaaaxp</iploginno>";
            xmlParamter+="<ipgroupid>10031</ipgroupid>";
            xmlParamter+="<idopcode>d340</idopcode>";
            xmlParamter+="<idloginno>ab10zT</idloginno>";
            xmlParamter+="<iopcode>8058</iopcode>";
            xmlParamter+="<iloginAccept></iloginAccept>";
            xmlParamter+="<ioptime>20170804162343</ioptime>";
            xmlParamter+="<iopflag>0</iopflag>";
            xmlParamter+="<ibegtime>20170804</ibegtime>";
            xmlParamter+="<iendtime>20500101</iendtime>";
            xmlParamter+="<ioacode>ESOP创建</ioacode>";
            xmlParamter+="<ioatitle>ESOP创建</ioatitle>";
            xmlParamter+="</root>";
            System.out.println("+++++++++++++++++++++++++ xmlParamter = "+xmlParamter);
            String resulXml = callCrmService.CrmWebSvcTestCall("sLoginPdVestWS_XML",xmlParamter);
            System.out.println("+++++++++++++++++++++++++ resulXml = "+resulXml);
            //logger.info("resulXml=返回xml报文"+resulXml);

            Document dom= DocumentHelper.parseText(resulXml);
            Element R=dom.getRootElement();
            String return_code_boss=R.element("RETURN_CODE").getText();
            String return_msg_boss=R.element("RETURN_MSG").getText();
            String result = return_code_boss+","+return_msg_boss;
            System.out.println("+++++++++++++++++++++++++ result = "+result);

        }catch (Exception e){
        }
    }
    public String CrmWebSvcTestCall(String serviceName,String str) {
        try {
            String serviceUrl = "http://10.110.26.23:61000/esbWS/services/"+serviceName+"/callService";

            Service service = new Service();
            Call call = (Call) service.createCall();
            String namespace = "http://ws.sitech.com";
            call.setTargetEndpointAddress(serviceUrl);

            call.setOperationName(new QName(namespace,serviceName));
            call.addParameter("name", org.apache.axis.encoding.XMLType.XSD_DATE, javax.xml.rpc.ParameterMode.IN);
            call.setReturnType(org.apache.axis.encoding.XMLType.XSD_STRING);

            String result = (String)call.invoke(new Object[]{str});
            return result;

        } catch (Exception e) {
            System.err.println(e.toString());
            String returnMsgInfo = "service calling failed !!!";
            return returnMsgInfo;
        }
    }
}
