package com.esop.custLedger.controller;

import com.esop.common.jaxb.CallXmlService;
import com.esop.common.jaxb.JsonToXml;
import com.esop.common.page.DataConversion;
import com.esop.common.page.Result;
import com.esop.custLedger.dto.CustLedgerDto;
import com.esop.custLedger.dto.MethodDto;
import com.esop.custLedger.service.CustLedgerService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;

/**
 * Created by Qiao on 2017/7/8.
 */
@RestController
public class CustLedgerController {
    @Autowired
    CustLedgerService custProAgrLedService;
    @Autowired
    DataConversion dataConversion;
    @Autowired
    CallXmlService callXmlService;
    Result result = new Result();

    @Value("${billingService}")
    private String billingService;

    //获取组织机构
    @RequestMapping(value = "/getGroupMsg")
    public List<CustLedgerDto> getGroupMsg(CustLedgerDto parameter){
        String login_type = custProAgrLedService.getLoginType(parameter);
        List<CustLedgerDto> list ;
        System.out.println("org_code----------"+parameter.getOrg_code());

        if(login_type.equals("A")){
            if(parameter.getService_no().substring(2,4).equals("vg")){
                parameter.setFlag("1");
                System.out.println("flag-------------1");
            }else{
                System.out.println("flag-------------2");
                parameter.setFlag("2");
            }
        }else{
            System.out.println("flag-------------3");
            parameter.setFlag("3");
        }
        list = custProAgrLedService.getGroupMsg(parameter);
        return list;
    }
    //集团产品协议台账调用服务
    @RequestMapping(value = "/queryProAgrLed")
    public String queryProAgrLed(CustLedgerDto parameter){
        String xmlParamter = "";
        xmlParamter= "<?xml version=\"1.0\" encoding=\"UTF-8\" ?><ROOT><GROUP_ID>"+parameter.getGroup_id()+
                     "</GROUP_ID><BEGIN_TIME>"+parameter.getStart_date()+"</BEGIN_TIME><END_TIME>"+parameter.getEnd_date()+"</END_TIME>" +
                     "<FLAG>1</FLAG><UNIT_ID>"+parameter.getCust_id()+"</UNIT_ID></ROOT>";

        String resulXml = callXmlService.WebserviceCall("sGrpProdOpQry_XML",xmlParamter);


        System.out.println("resulXml1================"+resulXml);
        String resulJson = "";

        resulXml = resulXml.replaceAll(" type=\"string\"","");
        JsonToXml jsonToXml = new JsonToXml();
        resulJson = jsonToXml.xml2json(resulXml).replaceAll("null","\"\"");
        //System.out.println("resulXml3================"+resulJson.replaceAll("null",""));

        //System.out.println("aaaaaaaaaaaaaaaaaa"+resulJson.substring(resulJson.indexOf("["),resulJson.lastIndexOf("]")+1).replaceAll("null","\"\""));
       /* resulJson = resulJson.substring(resulJson.indexOf("["),resulJson.lastIndexOf("]")+1).replaceAll("null","\"\"");
        System.out.println("resulJson---------"+resulJson);
        resulJson = resulJson.replaceAll("\"\"","\'\'");
        resulJson = resulJson.replaceAll("\"","\'");
        System.out.println("resulJson---------"+resulJson);
        JSONArray jsonarray = JSONArray.fromObject(resulJson.replaceAll("\"\"","\'\'"));
        System.out.println("jsonarray---------"+jsonarray);
        List list = (List)JSONArray.toList(jsonarray, ResultDto.class);


        String json="[{'name':'huangbiao','age':15},{'name':'liumei','age':14}]";
        JSONArray jsonarray1 = JSONArray.fromObject(json);
        System.out.println("jsonarray1----------"+jsonarray1);
        List list1 = (List)JSONArray.toList(jsonarray1, Person.class);*/

        return resulJson;
    }

    @RequestMapping(value = "/getDate")
    public String getDate(String OpTime){
        String time = OpTime.substring(0,4)+"-"+OpTime.substring(4,6)+"-"+OpTime.substring(6,8)+" "+OpTime.substring(8,10)+":"+OpTime.substring(10,12)+":"+OpTime.substring(12,14);
        System.out.println("optime------------"+time);
        time = "{\"time\":\""+time+"\"}";
        return time;
    }
    //集团产品协议台账查询稽核信息
    @RequestMapping(value = "/queryCustProAgrLedDetail")
    public CustLedgerDto queryCustProAgrLedDetail(CustLedgerDto parameter){
        return custProAgrLedService.queryCustProAgrLedDetail(parameter);
    }

    //集团产品协议台账新增稽核信息
    @RequestMapping(value = "/updateCustProAgrLed")
    public int updateCustProAgrLed(CustLedgerDto parameter){
        return custProAgrLedService.updateCustProAgrLed(parameter);
    }

    //集团专线暂停销户太正调用服务
    @RequestMapping(value = "/queryDlineCtaAss")
    public String queryDlineCtaAss(CustLedgerDto parameter){
        String xmlParamter = "";
        xmlParamter= "<?xml version=\"1.0\" encoding=\"UTF-8\" ?><ROOT><GROUP_ID>"+parameter.getGroup_id()+
                "</GROUP_ID><BEGIN_TIME>"+parameter.getStart_date()+"</BEGIN_TIME><END_TIME>"+parameter.getEnd_date()+"</END_TIME>" +
                "<FLAG>2</FLAG><UNIT_ID>"+parameter.getCust_id()+"</UNIT_ID></ROOT>";

        String resulXml = callXmlService.WebserviceCall("sGrpProdOpQry_XML",xmlParamter);


        System.out.println("resulXml1================"+resulXml);
        String resulJson = "";

        resulXml = resulXml.replaceAll(" type=\"string\"","");
        JsonToXml jsonToXml = new JsonToXml();
        resulJson = jsonToXml.xml2json(resulXml).replaceAll("null","\"\"");

        return resulJson;
    }

    //集团专线暂停销户稽核信息
    @RequestMapping(value = "/queryDlineCtaAssDetail")
    public CustLedgerDto queryDlineCtaAssDetail(CustLedgerDto parameter){
        return custProAgrLedService.queryDlineCtaAssDetail(parameter);
    }

    //新增集团专线暂停销户稽核信息
    @RequestMapping(value = "/updateDlineCtaAssDetail")
    public int updateDlineCtaAssDetail(CustLedgerDto parameter){
        return custProAgrLedService.updateDlineCtaAssDetail(parameter);
    }

    //集团专线暂停销户台账调用服务
    @RequestMapping(value = "/queryPrdPtgChgAdd")
    public String queryPrdPtgChgAdd(CustLedgerDto parameter){
        String xmlParamter = "";
        xmlParamter= "<?xml version=\"1.0\" encoding=\"UTF-8\" ?><ROOT><GROUP_ID>"+parameter.getGroup_id()+
                "</GROUP_ID><BEGIN_TIME>"+parameter.getStart_date()+"</BEGIN_TIME><END_TIME>"+parameter.getEnd_date()+"</END_TIME>" +
                "<FLAG>3</FLAG><UNIT_ID>"+parameter.getCust_id()+"</UNIT_ID></ROOT>";

        String resulXml = callXmlService.WebserviceCall("sGrpProdOpQry_XML",xmlParamter);


        System.out.println("resulXml1================"+resulXml);
        String resulJson = "";

        resulXml = resulXml.replaceAll(" type=\"string\"","");
        JsonToXml jsonToXml = new JsonToXml();
        resulJson = jsonToXml.xml2json(resulXml).replaceAll("null","\"\"");

        return resulJson;
    }

    //集团专线暂停销户稽核信息
    @RequestMapping(value = "/queryPrdPtgChgAddDetail")
    public CustLedgerDto queryPrdPtgChgAddDetail(CustLedgerDto parameter){
        return custProAgrLedService.queryPrdPtgChgAddDetail(parameter);
    }

    //新增集团专线暂停销户稽核信息
    @RequestMapping(value = "/updatePrdPtgChgAddDetail")
    public int updatePrdPtgChgAddDetail(CustLedgerDto parameter){
        return custProAgrLedService.updatePrdPtgChgAddDetail(parameter);
    }
    //获取序列值
    @RequestMapping(value = "/getSeqNextVal")
    public String getSeqNextVal(){
        return custProAgrLedService.getSeqNextVal();
    }
    //新增管理办法
    @RequestMapping(value = "/insertManageMethod")
    public int insertManageMethod(MethodDto parameter){
        return custProAgrLedService.insertManageMethod(parameter);
    }

    //成员类业务协议台账稽核信息
    @RequestMapping(value = "/queryCustMemInAss")
    public String queryCustMemInAss(CustLedgerDto parameter){
        String xmlParamter = "";
        xmlParamter= "<?xml version=\"1.0\" encoding=\"UTF-8\" ?><ROOT><GROUP_ID>"+parameter.getGroup_id()+
                "</GROUP_ID><BEGIN_TIME>"+parameter.getStart_date()+"</BEGIN_TIME><END_TIME>"+parameter.getEnd_date()+"</END_TIME>" +
                "<FLAG>1</FLAG></ROOT>";

        String resulXml = callXmlService.WebserviceCall("sGrpMemberOpQryWS_XML",xmlParamter);


        System.out.println("resulXml1================"+resulXml);
        String resulJson = "";

        resulXml = resulXml.replaceAll(" type=\"string\"","");
        JsonToXml jsonToXml = new JsonToXml();
        resulJson = jsonToXml.xml2json(resulXml).replaceAll("null","\"\"");

        return resulJson;
    }

    //成员类业务协议台账稽核信息
    @RequestMapping(value = "/queryCustMemInAssDetail")
    public CustLedgerDto queryCustMemInAssDetail(CustLedgerDto parameter){
        return custProAgrLedService.queryCustMemInAssDetail(parameter);
    }

    //新增成员类业务协议台账稽核信息
    @RequestMapping(value = "/updateyCustMemInAssDetail")
    public int updateyCustMemInAssDetail(CustLedgerDto parameter){
        return custProAgrLedService.updateyCustMemInAssDetail(parameter);
    }


    @RequestMapping(value = "/queryCustMemList")
    public String queryCustMemList(CustLedgerDto parameter){
        String xmlParamter = "";
        xmlParamter= "<?xml version=\"1.0\" encoding=\"UTF-8\" ?><ROOT><Login_accept>"+parameter.getLogin_accept()+
                "</Login_accept><Grp_id>"+parameter.getPhoneNo()+"</Grp_id>" +
                "<Id_no>"+parameter.getId_no()+"</Id_no></ROOT>";
        System.out.println("xmlParamter--------------"+xmlParamter);
        String resulXml = callXmlService.WebserviceCall("sGrpMembersQryWS_XML",xmlParamter);


        System.out.println("resulXml1================"+resulXml);
        String resulJson = "";

        resulXml = resulXml.replaceAll(" type=\"string\"","");
        JsonToXml jsonToXml = new JsonToXml();
        resulJson = jsonToXml.xml2json(resulXml).replaceAll("null","\"\"");

        return resulJson;
    }

}
