package com.esop.busiAnalysis.controller;

import com.esop.busiAnalysis.dto.ComplaintsDto;
import com.esop.busiAnalysis.dto.EpWfSbizTypeDto;
import com.esop.busiAnalysis.service.ComplaintsService;
import com.esop.busiAnalysis.service.EpWfSbizTypeService;
import com.esop.common.page.DataConversion;
import com.esop.common.page.PageParameter;
import com.esop.common.page.Result;
import com.esop.common.util.ParameterConversion;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.http.HttpServletRequest;
import java.util.*;
import java.io.File;
import java.io.*;

/**
 * Created by zuoyue on 2017/6/2.
 */
@RestController
public class ComplaintsController {
    @Autowired
    ComplaintsService complaintsService;
    @Autowired
    EpWfSbizTypeService epWfSbizTypeService;
    @Autowired
    DataConversion dataConversion;
    Result result=new Result();
    /*重点成员投诉明细*/
    @RequestMapping(value="/impMemberComplaintsInfo")
    public Result getComplaintsInfoList(ComplaintsDto parameter, HttpServletRequest request){
        System.out.println("--------------------打印测试-------------------------");
        Enumeration en =request.getParameterNames();
        while (en.hasMoreElements()){
            String paramName = (String) en.nextElement();
            System.out.println(paramName + " = " + request.getParameter(paramName));
        }
        System.out.println("--------------------打印测试--------------------------");
        PageParameter page = dataConversion.setPageValues(request);
        page.setRecordsTotal(result.getRecordsTotal());
        parameter.setPage(page);
        result = complaintsService.getComplaints(parameter);
        return result;
    }
    /*重点产品投诉明细*/
    @RequestMapping(value="/impProComplaintsInfo")
    public Result getImpProductInfoList(ComplaintsDto parameter, HttpServletRequest request){
        System.out.println("--------------------打印测试-------------------------");
        Enumeration en =request.getParameterNames();
        while (en.hasMoreElements()){
            String paramName = (String) en.nextElement();
            System.out.println(paramName + " = " + request.getParameter(paramName));
        }
        System.out.println("--------------------打印测试--------------------------");
        PageParameter page = dataConversion.setPageValues(request);
        page.setRecordsTotal(result.getRecordsTotal());
        parameter.setPage(page);
        result = complaintsService.getProductComplaintInfo(parameter);
        return result;
    }
     /*重点产品投诉情况*/
    @RequestMapping(value = "/impProductComplaints")
    public List<ComplaintsDto> getImpProductConplaints(ComplaintsDto parameter){
        List<ComplaintsDto> list = complaintsService.getImpProductComplaints(parameter);

        System.out.println("重点产品"+list);
        return list;
    }

    /*重点人员投诉情况*/
    @RequestMapping(value = "/impMemberComplaints")
    public List getImpMemberConplaints(ComplaintsDto parameter, HttpServletRequest request){
        String region_code = request.getParameter("region_code");
        String town_code = request.getParameter("town_code")==null?"":request.getParameter("town_code");
        parameter.setTown_code(town_code);
        parameter.setRegion_code(region_code);
        List list = complaintsService.getImpMemberComplaints(parameter);
        System.out.println("重点产品"+list);
        return list;
    }
    /*app重要成员客户投诉查询*/
    @RequestMapping(value = "/qryImpMemberComplaints")
    public List qryComplaintInfo(HttpServletRequest request){
        ComplaintsDto param = ParameterConversion.jsonToObject(request, ComplaintsDto.class);
        /*ComplaintsDto param = new ComplaintsDto();
        param.setRegion_name("哈尔滨");*/
        return complaintsService.qryImpMemComplaints(param);
    }

}
